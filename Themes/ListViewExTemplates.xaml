<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:PSHelpEdit.Themes"
                    xmlns:keys="clr-namespace:PSHelpEdit.Keys"
                    xmlns:ctlx ="clr-namespace:PSHelpEdit.ControlExtenders">

    <!--#region Focus visual resources-->
    <!--<Style x:Key="ListViewItemFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle RadiusY="2" RadiusX="2" Stroke="#8E6EA6F5" StrokeThickness="1"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->
    <!--#endregion-->
    
    <!--#region Standard ListViewItem constrol template-->
    <ControlTemplate x:Key="{x:Static keys:ResourceKeys.ListViewStdControlTemplateKey}" TargetType="{x:Type ctlx:ListViewItemEx}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                CornerRadius="2" 
                SnapsToDevicePixels="true">
            <Border x:Name="InnerBorder" 
                    BorderThickness="1" 
                    CornerRadius="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="11"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="UpperHighlight"
                               Fill="#75FFFFFF" 
                               Visibility="Collapsed"/>
                    <GridViewRowPresenter Grid.RowSpan="2" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemHoverFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FFCCF0FF"/>
                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemSelectedFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemSelectedInactiveFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FFCFCFCF"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemSelectedHoverFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->

    <!--#region Editable controlTemplate for the Param listViews-->
    <ControlTemplate x:Key="{x:Static keys:ResourceKeys.ListViewEditableControlTemplateKey}" TargetType="{x:Type ctlx:ListViewItemEx}">
        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                CornerRadius="2" 
                SnapsToDevicePixels="true">
            <Border x:Name="InnerBorder" 
                    BorderThickness="1" 
                    CornerRadius="1">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition MaxHeight="11"/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Rectangle x:Name="UpperHighlight"
                               Fill="#75FFFFFF" 
                               Visibility="Collapsed"/>
                    <GridViewRowPresenter Grid.RowSpan="2" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Grid>
            </Border>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemHoverFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FFCCF0FF"/>
                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemSelectedFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
                <Setter Property="BorderBrush" TargetName="InnerBorder" Value="#80FFFFFF"/>
                <Setter Property="Visibility" TargetName="UpperHighlight" Value="Visible"/>
                <Setter Property="Fill" TargetName="UpperHighlight" Value="#40FFFFFF"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="Selector.IsSelectionActive" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemSelectedInactiveFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FFCFCFCF"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="true"/>
                    <Condition Property="IsMouseOver" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource {x:Static keys:ResourceKeys.ListItemSelectedHoverFillKey}}"/>
                <Setter Property="BorderBrush" Value="#FF98DDFB"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <!--#endregion-->
    
    <Style TargetType="{x:Type ctlx:ListViewItemEx}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ListViewItemFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="0,0,0,1"/>
        <Setter Property="Padding" Value="5,2,5,2"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template" Value="{DynamicResource {x:Static keys:ResourceKeys.ListViewStdControlTemplateKey}}"/>
    
        <!--<Style.Triggers>
            <Trigger Property="EditMode" Value="False">
                <Setter Property="Template"  Value="{DynamicResource {x:Static keys:ResourceKeys.ListViewStdControlTemplateKey}}"/>
            </Trigger>
            <Trigger Property="EditMode" Value="True">
                <Setter Property="Template"  Value="{DynamicResource {x:Static keys:ResourceKeys.ListboxItemEditControlTemplateKey}}"/>
            </Trigger>
        </Style.Triggers>-->

    </Style>


</ResourceDictionary>